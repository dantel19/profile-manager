<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Profile Manager - Copyright (C) 2016  Daniele Tellina

   Profile Manager is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
  
   Profile Manager is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
  
   You should have received a copy of the GNU General Public License
   along with Profile Manager.  If not, see <http://www.gnu.org/licenses/>.
-->
<persistence version="2.0"
   xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
   
   <persistence-unit name="profilemanager" transaction-type="RESOURCE_LOCAL">
   	  <provider>org.hibernate.ejb.HibernatePersistence</provider>
      <non-jta-data-source>jdbc/profilemanager</non-jta-data-source>

      <class>it.univaq.incipict.profilemanager.business.model.User</class>
      <class>it.univaq.incipict.profilemanager.business.model.Role</class>

      <exclude-unlisted-classes>true</exclude-unlisted-classes>
     
      <properties>
         <!-- When remove(entity) is called, reset the identifier value of  entity. so it's considered transient after removal -->
         <property name="hibernate.use_identifier_rollback" value="true" />
         <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
         <!-- <property name="hibernate.transaction.jta.platform" value="org.hibernate.service.jta.platform.internal.SunOneJtaPlatform"/> 
              <property name="hibernate.transaction.factory_class" value="org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory"/>
         -->
         <property name="hibernate.show_sql" value="true" />
      </properties>
   </persistence-unit>
</persistence>